// Code generated by mockery v1.0.0. DO NOT EDIT.
package rpc

import mock "github.com/stretchr/testify/mock"
import types "github.com/aergoio/aergo/v2/types"

// MockMsgHelper is an autogenerated mock type for the MockMsgHelper type
type MockMsgHelper struct {
	mock.Mock
}

// ExtractBlockFromResponse provides a mock function with given fields: rawResponse
func (_m *MockMsgHelper) ExtractBlockFromResponse(rawResponse interface{}) (*types.Block, error) {
	ret := _m.Called(rawResponse)

	var r0 *types.Block
	if rf, ok := ret.Get(0).(func(interface{}) *types.Block); ok {
		r0 = rf(rawResponse)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.Block)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(rawResponse)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExtractTxFromResponse provides a mock function with given fields: rawResponse
func (_m *MockMsgHelper) ExtractTxFromResponse(rawResponse interface{}) (*types.Tx, error) {
	ret := _m.Called(rawResponse)

	var r0 *types.Tx
	if rf, ok := ret.Get(0).(func(interface{}) *types.Tx); ok {
		r0 = rf(rawResponse)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.Tx)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(rawResponse)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExtractTxsFromResponse provides a mock function with given fields: rawResponse
func (_m *MockMsgHelper) ExtractTxsFromResponse(rawResponse interface{}) ([]*types.Tx, error) {
	ret := _m.Called(rawResponse)

	var r0 []*types.Tx
	if rf, ok := ret.Get(0).(func(interface{}) []*types.Tx); ok {
		r0 = rf(rawResponse)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*types.Tx)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(rawResponse)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
