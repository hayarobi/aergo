// Code generated by MockGen. DO NOT EDIT.
// Source: txnotice.go

// Package p2pmock is a generated GoMock package.
package p2pmock

import (
	types "github.com/aergoio/aergo/v2/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTxNoticeTracer is a mock of TxNoticeTracer interface
type MockTxNoticeTracer struct {
	ctrl     *gomock.Controller
	recorder *MockTxNoticeTracerMockRecorder
}

// MockTxNoticeTracerMockRecorder is the mock recorder for MockTxNoticeTracer
type MockTxNoticeTracerMockRecorder struct {
	mock *MockTxNoticeTracer
}

// NewMockTxNoticeTracer creates a new mock instance
func NewMockTxNoticeTracer(ctrl *gomock.Controller) *MockTxNoticeTracer {
	mock := &MockTxNoticeTracer{ctrl: ctrl}
	mock.recorder = &MockTxNoticeTracerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTxNoticeTracer) EXPECT() *MockTxNoticeTracerMockRecorder {
	return m.recorder
}

// RegisterTxNotice mocks base method
func (m *MockTxNoticeTracer) RegisterTxNotice(txIDs []types.TxID, cnt int, alreadySent []types.PeerID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RegisterTxNotice", txIDs, cnt, alreadySent)
}

// RegisterTxNotice indicates an expected call of RegisterTxNotice
func (mr *MockTxNoticeTracerMockRecorder) RegisterTxNotice(txIDs, cnt, alreadySent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterTxNotice", reflect.TypeOf((*MockTxNoticeTracer)(nil).RegisterTxNotice), txIDs, cnt, alreadySent)
}

// ReportSend mocks base method
func (m *MockTxNoticeTracer) ReportSend(txIDs []types.TxID, peerID types.PeerID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ReportSend", txIDs, peerID)
}

// ReportSend indicates an expected call of ReportSend
func (mr *MockTxNoticeTracerMockRecorder) ReportSend(txIDs, peerID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportSend", reflect.TypeOf((*MockTxNoticeTracer)(nil).ReportSend), txIDs, peerID)
}

// ReportNotSend mocks base method
func (m *MockTxNoticeTracer) ReportNotSend(txIDs []types.TxID, cnt int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ReportNotSend", txIDs, cnt)
}

// ReportNotSend indicates an expected call of ReportNotSend
func (mr *MockTxNoticeTracerMockRecorder) ReportNotSend(txIDs, cnt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportNotSend", reflect.TypeOf((*MockTxNoticeTracer)(nil).ReportNotSend), txIDs, cnt)
}
